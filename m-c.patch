# HG changeset patch
# User Joshua Cranmer <Pidgeot18@gmail.com>
# Date 1390021165 21600
#      Fri Jan 17 22:59:25 2014 -0600
# Node ID dfd5de862e7d6c90f12206abe85d7dd2db5c1fab
# Parent e0c5ab3acc4e9e9652c0ce8ee56aeadd48e0346b
[mq]: code-coverage-on-try

diff --git a/browser/config/mozconfigs/common b/browser/config/mozconfigs/common
--- a/browser/config/mozconfigs/common
+++ b/browser/config/mozconfigs/common
@@ -1,7 +1,9 @@
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 # This file is included by all browser mozconfigs
 
 . "$topsrcdir/build/mozconfig.common"
+
+export MOZ_CODE_COVERAGE=1
diff --git a/build/macosx/mozconfig.common b/build/macosx/mozconfig.common
--- a/build/macosx/mozconfig.common
+++ b/build/macosx/mozconfig.common
@@ -28,8 +28,14 @@ if [ -z "$CC" ]; then
 fi
 
 # If not set use the system default clang++
 if [ -z "$CXX" ]; then
     export CXX=clang++
 fi
 
 . "$topsrcdir/build/mozconfig.cache"
+
+# Enable code coverage
+ac_add_options --disable-optimize
+export CFLAGS="--coverage"
+export CXXFLAGS="--coverage"
+export LDFLAGS="--coverage"
diff --git a/build/unix/mozconfig.linux b/build/unix/mozconfig.linux
--- a/build/unix/mozconfig.linux
+++ b/build/unix/mozconfig.linux
@@ -22,16 +22,25 @@ else
   CXX="/tools/gcc-4.7.3-0moz1/bin/g++"
 fi
 
 ac_add_options --enable-elf-hack
 
 # Avoid dependency on libstdc++ 4.7
 ac_add_options --enable-stdcxx-compat
 
+# Enable code coverage
+ac_add_options --enable-optimize
+SCCACHE_DISABLE=1
+export CFLAGS="--coverage"
+export CXXFLAGS="--coverage"
+export LDFLAGS="--coverage"
+# NSPR seems to think that linux32-on-64-bit builds is a cross-compile.
+export HOST_LDFLAGS="--coverage"
+
 # $topsrcdir/gtk3 comes from tooltool, when the tooltool manifest contains it.
 if [ -d "$topsrcdir/gtk3" ]; then
   # PKG_CONFIG_LIBDIR is appropriately overridden in mozconfig.linux32
   export PKG_CONFIG_LIBDIR=/usr/lib64/pkgconfig:/usr/share/pkgconfig
   export PKG_CONFIG_SYSROOT_DIR="$topsrcdir/gtk3"
   export PKG_CONFIG_PATH="$topsrcdir/gtk3/usr/local/lib/pkgconfig"
   export PATH="$topsrcdir/gtk3/usr/local/bin:${PATH}"
   # Ensure cairo, gdk-pixbuf, etc. are not taken from the system installed packages.
diff --git a/mobile/android/config/mozconfigs/common b/mobile/android/config/mozconfigs/common
--- a/mobile/android/config/mozconfigs/common
+++ b/mobile/android/config/mozconfigs/common
@@ -49,9 +49,14 @@ HOST_CXX="/tools/gcc-4.7.2-0moz1/bin/g++
 
 # Avoid dependency on libstdc++ 4.7
 ac_add_options --enable-stdcxx-compat
 
 mk_add_options "export ANT_HOME=$topsrcdir/apache-ant"
 
 mk_add_options "export PATH=$topsrcdir/apache-ant/bin:$PATH"
 
-JS_BINARY="$topsrcdir/mobile/android/config/js_wrapper.sh"
+# Enable code coverage
+export CFLAGS="--coverage"
+export CXXFLAGS="--coverage"
+export LDFLAGS="--coverage"
+export HOST_LDFLAGS="--coverage"
+S_BINARY="$topsrcdir/mobile/android/config/js_wrapper.sh"
diff --git a/testing/mozharness/mozharness.json b/testing/mozharness/mozharness.json
--- a/testing/mozharness/mozharness.json
+++ b/testing/mozharness/mozharness.json
@@ -1,4 +1,4 @@
 {
-    "repo": "https://hg.mozilla.org/build/mozharness",
+    "repo": "https://hg.mozilla.org/users/Pidgeot18_gmail.com/mozharness-cc",
     "revision": "production"
 }
diff --git a/toolkit/mozapps/installer/packager.mk b/toolkit/mozapps/installer/packager.mk
--- a/toolkit/mozapps/installer/packager.mk
+++ b/toolkit/mozapps/installer/packager.mk
@@ -713,23 +713,20 @@ stage-package: $(MOZ_PKG_MANIFEST)
 ifndef LIBXUL_SDK
 ifdef MOZ_PACKAGE_JSSHELL
 # Package JavaScript Shell
 	@echo 'Packaging JavaScript Shell...'
 	$(RM) $(PKG_JSSHELL)
 	$(MAKE_JSSHELL)
 endif # MOZ_PACKAGE_JSSHELL
 endif # LIBXUL_SDK
-ifdef MOZ_CODE_COVERAGE
 	# Package code coverage gcno tree
 	@echo 'Packaging code coverage data...'
-	$(RM) $(CODE_COVERAGE_ARCHIVE_BASENAME).zip
-	$(PYTHON) -mmozbuild.codecoverage.packager \
-		--output-file='$(DIST)/$(PKG_PATH)$(CODE_COVERAGE_ARCHIVE_BASENAME).zip'
-endif
+	$(RM) $(CODE_COVERAGE_ARCHIVE_BASENAME).tbz2
+	find $(DEPTH) -name '*.gcno' | tar -cjf '$(DIST)/all-gcno.tbz2' -T -
 ifeq (Darwin, $(OS_ARCH))
 ifdef MOZ_ASAN
 	@echo "Rewriting ASan runtime dylib paths for all binaries in $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR)$(_BINPATH) ..."
 	$(PYTHON) $(MOZILLA_DIR)/build/unix/rewrite_asan_dylib.py $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR)$(_BINPATH)
 endif # MOZ_ASAN
 endif # Darwin
 
 prepare-package: stage-package
@@ -881,20 +878,18 @@ UPLOAD_FILES= \
   $(call QUOTED_WILDCARD,$(PKG_JSSHELL)) \
   $(if $(UPLOAD_EXTRA_FILES), $(foreach f, $(UPLOAD_EXTRA_FILES), $(wildcard $(DIST)/$(f))))
 
 ifdef MOZ_CRASHREPORTER_UPLOAD_FULL_SYMBOLS
 UPLOAD_FILES += \
   $(call QUOTED_WILDCARD,$(DIST)/$(PKG_PATH)$(SYMBOL_FULL_ARCHIVE_BASENAME).zip)
 endif
 
-ifdef MOZ_CODE_COVERAGE
 UPLOAD_FILES += \
-  $(call QUOTED_WILDCARD,$(DIST)/$(PKG_PATH)$(CODE_COVERAGE_ARCHIVE_BASENAME).zip)
-endif
+  $(call QUOTED_WILDCARD,$(DIST)/all-gcno.tbz2)
 
 SIGN_CHECKSUM_CMD=
 ifdef MOZ_SIGN_CMD
 # If we're signing with gpg, we'll have a bunch of extra detached signatures to
 # upload. We also want to sign our checksums file
 SIGN_CHECKSUM_CMD=$(MOZ_SIGN_CMD) -f gpg $(CHECKSUM_FILE)
 
 CHECKSUM_FILES += $(CHECKSUM_FILE).asc
